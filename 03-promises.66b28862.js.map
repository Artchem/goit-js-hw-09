{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAxCM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBAOJ,IALA,IAAMC,EAAaC,OAAOH,EAAII,OAAOC,SAASjB,MAAMkB,OAC9CC,EAAYJ,OAAOH,EAAII,OAAOC,SAASG,KAAKF,OAC5CG,EAAgBT,EAAII,OAAOC,SAASK,OAAOJ,MAC7CK,EAAeT,EAEVU,EAAI,EAAGA,GAAKH,EAAeG,GAAK,EACvC1B,EAAc0B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAG9D8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAG9DuB,GAAgBJ,EAElBP,EAAIoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n\n  const firstDelay = Number(evt.target.elements.delay.value);\n  const delayStep = Number(evt.target.elements.step.value);\n  const amountPromise = evt.target.elements.amount.value;\n  let delayPromise = firstDelay;\n\n  for (let i = 1; i <= amountPromise; i += 1) {\n    createPromise(i, delayPromise)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log({ position: `${position}`, delay: `${delay}` });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log({ position: `${position}`, delay: `${delay}` });\n      });\n    delayPromise += delayStep;\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","firstDelay","Number","target","elements","value","delayStep","step","amountPromise","amount","delayPromise","i","then","param","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.66b28862.js.map"}